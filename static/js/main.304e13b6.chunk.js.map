{"version":3,"sources":["MonthlyExams/TuesdayFirstVersion/Components/SetDisplay/SetDisplay.module.css","MonthlyExams/TuesdaySecondVersion/Components/SetDisplay/SetDisplay.module.css","MonthlyExams/TuesdayFirstVersion/Components/Counter/Counter.module.css","MonthlyExams/TuesdaySecondVersion/Components/Counter/Counter.module.css","MonthlyExams/Wednesday/Components/Counter3/Counter3.module.css","MonthlyExams/Wednesday/Components/SetDisplay3/SetDisplay3.module.css","MonthlyExams/TuesdayFirstVersion/TuesdayFirst.module.css","MonthlyExams/Monday/Components/Counter/Counter.module.css","MonthlyExams/TuesdayFirstVersion/Components/CounterDisplay/CounterDisplay.module.css","MonthlyExams/TuesdaySecondVersion/Components/CounterDisplay/CounterDisplay.module.css","MonthlyExams/Wednesday/Components/CounterDisplay3/CounterDisplay3.module.css","MonthlyExams/Monday/Monday.module.css","MonthlyExams/Monday/Components/CounterDisplay/CounterDisplay.module.css","MonthlyExams/TuesdayFirstVersion/Components/Input/Input.module.css","MonthlyExams/TuesdaySecondVersion/Components/Input/Input.module.css","MonthlyExams/Wednesday/Components/Input3/Input3.module.css","MonthlyExams/Wednesday/Wednesday.module.css","MonthlyExams/Monday/Components/Button/Button.module.css","MonthlyExams/TuesdayFirstVersion/Components/Button/Button.module.css","MonthlyExams/TuesdaySecondVersion/Components/Button/Button.module.css","MonthlyExams/Wednesday/Components/Button3/Button3.module.css","MonthlyExams/Monday/Components/Button/Button.tsx","MonthlyExams/Monday/Components/CounterDisplay/CounterDisplay.tsx","MonthlyExams/Monday/Components/Counter/Counter.tsx","MonthlyExams/Monday/Monday.tsx","MonthlyExams/TuesdayFirstVersion/Components/Button/Button.tsx","MonthlyExams/TuesdayFirstVersion/Components/CounterDisplay/CounterDisplay.tsx","MonthlyExams/TuesdayFirstVersion/Components/Input/Input.tsx","MonthlyExams/TuesdayFirstVersion/Components/SetDisplay/SetDisplay.tsx","MonthlyExams/TuesdayFirstVersion/Components/Counter/Counter.tsx","MonthlyExams/TuesdayFirstVersion/TuesdayFirst.tsx","MonthlyExams/TuesdaySecondVersion/Components/Button/Button.tsx","MonthlyExams/TuesdaySecondVersion/Components/CounterDisplay/CounterDisplay.tsx","MonthlyExams/TuesdaySecondVersion/Components/Input/Input.tsx","MonthlyExams/TuesdaySecondVersion/Components/SetDisplay/SetDisplay.tsx","MonthlyExams/TuesdaySecondVersion/Components/Counter/Counter.tsx","MonthlyExams/TuesdaySecondVersion/TuesdaySecond.tsx","MonthlyExams/Wednesday/Components/Input3/Input3.tsx","MonthlyExams/Wednesday/bll/reducerForValues.ts","MonthlyExams/Wednesday/bll/reducerForButtons.ts","MonthlyExams/Wednesday/bll/reducerForScreens.ts","MonthlyExams/Wednesday/Components/SetDisplay3/SetDisplay3.tsx","MonthlyExams/Wednesday/Components/Button3/Button3.tsx","MonthlyExams/Wednesday/Components/CounterDisplay3/CounterDisplay3.tsx","MonthlyExams/Wednesday/Components/Counter3/Counter3.tsx","MonthlyExams/Wednesday/Wednesday.tsx","App.tsx","reportWebVitals.ts","MonthlyExams/Wednesday/bll/store.ts","MonthlyExams/Wednesday/bll/localStorageFunctions.ts","index.tsx"],"names":["module","exports","Button","props","disabled","disable","onClick","callback","className","style","button","title","CounterDisplay","redText","counterNumber","redNumber","number","Counter","useState","inc","setInc","disableInc","setDisableInc","disableReset","setDisableReset","useEffect","incLS","localStorage","getItem","incNew","JSON","parse","highestCounterNumber","allActiveButtons","back","middle","counterField","buttonsField","setItem","stringify","Monday","appComponent","textDecoration","error","setMessageRed","setMessage","max","Input","fieldSeparate","name","inputStyle","type","value","onChange","e","onChangeCallback","currentTarget","SetDisplay","inputCorrection","inputStyleMax","setInputStyleMax","inputStyleStart","setInputStyleStart","start","redBackground","main","onChangeMax","onChangeStart","setStart","setMax","disableSet","setDisableSet","setError","setIncOnResetOff","setIncOffResetOff","buttonsSettingsForIncReset","incrementTuesday","startValue","maxValue","onChangeHandler","valueStart","valueMax","toString","twoCounters","TuesdayFirst","showMain","setShowMain","changeWindowHandler","TuesdaySecond","Input3","initialState","tempStart","tempMax","increment","tempStartValueAC","tempMaxValueAC","incrementUpdateValueAC","setButtonValue","incButtonValue","resetButtonValue","setButtonValueAC","incButtonValueAC","resetButtonValueAC","counterScreen","setValueScreen","errorScreen","SetDisplay3","dispatch","useDispatch","allValues","useSelector","state","values","allButtonValues","buttons","screens","allButtonsSet","set","reset","checkValuesForCounterDisplay","Button3","CounterDisplay3","screenValues","Counter3","buttonValues","maxValueAC","Wednesday","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","loaderFromLocalStorageChecker","loadLocalStorage","subscribe","saverToLocalStorage","saveLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.304e13b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"SetDisplay_main__3tG7u\",\"fieldSeparate\":\"SetDisplay_fieldSeparate__1moIX\",\"number\":\"SetDisplay_number__3QokI\",\"inputCorrection\":\"SetDisplay_inputCorrection__3XtCW\",\"redBackground\":\"SetDisplay_redBackground__2P_ZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"SetDisplay_main__1mPOb\",\"fieldSeparate\":\"SetDisplay_fieldSeparate__1EfxC\",\"number\":\"SetDisplay_number__1yhyg\",\"inputCorrection\":\"SetDisplay_inputCorrection__2V6Zr\",\"redBackground\":\"SetDisplay_redBackground__3IYqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Counter_back__2PEdL\",\"middle\":\"Counter_middle__Y--sg\",\"counterField\":\"Counter_counterField__He1Tx\",\"buttonsField\":\"Counter_buttonsField__r3dks\",\"twoCounters\":\"Counter_twoCounters__2NAD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Counter_back__2VYbC\",\"middle\":\"Counter_middle__P2kof\",\"counterField\":\"Counter_counterField__1VBQW\",\"buttonsField\":\"Counter_buttonsField__QAYZA\",\"twoCounters\":\"Counter_twoCounters__2zkrT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Counter3_back__2uWtE\",\"middle\":\"Counter3_middle__2B1RE\",\"counterField\":\"Counter3_counterField__1qy7w\",\"buttonsField\":\"Counter3_buttonsField__DBaX3\",\"twoCounters\":\"Counter3_twoCounters__duCUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"SetDisplay3_main__2_-dI\",\"fieldSeparate\":\"SetDisplay3_fieldSeparate__3sFAv\",\"number\":\"SetDisplay3_number__3BMXL\",\"inputCorrection\":\"SetDisplay3_inputCorrection__MMRX4\",\"redBackground\":\"SetDisplay3_redBackground__1LSCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appComponent\":\"TuesdayFirst_appComponent__12eRp\",\"textDecoration\":\"TuesdayFirst_textDecoration__2BFMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Counter_back__TZ0Hn\",\"middle\":\"Counter_middle__3A_Mf\",\"counterField\":\"Counter_counterField__KsYDd\",\"buttonsField\":\"Counter_buttonsField__1wvWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"CounterDisplay_number__31qiD\",\"redNumber\":\"CounterDisplay_redNumber__3rcL2\",\"setMessage\":\"CounterDisplay_setMessage__3Ehw9\",\"setMessageRed\":\"CounterDisplay_setMessageRed__2_O9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"CounterDisplay_number__2GIiP\",\"redNumber\":\"CounterDisplay_redNumber__3iS9C\",\"setMessage\":\"CounterDisplay_setMessage__aSj2Z\",\"setMessageRed\":\"CounterDisplay_setMessageRed__1X6Kl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"CounterDisplay3_number__1xn3q\",\"redNumber\":\"CounterDisplay3_redNumber__2qE8G\",\"setMessage\":\"CounterDisplay3_setMessage__2WiAx\",\"setMessageRed\":\"CounterDisplay3_setMessageRed__3vWyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appComponent\":\"Monday_appComponent__kopOg\",\"textDecoration\":\"Monday_textDecoration__1-r8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"CounterDisplay_number__1kZ43\",\"redNumber\":\"CounterDisplay_redNumber__J_RKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldSeparate\":\"Input_fieldSeparate__3r5l3\",\"number\":\"Input_number__ER0lS\",\"inputCorrection\":\"Input_inputCorrection__24bjD\",\"redBackground\":\"Input_redBackground__2UYYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldSeparate\":\"Input_fieldSeparate__1XkAu\",\"number\":\"Input_number__nIWYH\",\"inputCorrection\":\"Input_inputCorrection__2L9ay\",\"redBackground\":\"Input_redBackground__aTJBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldSeparate\":\"Input3_fieldSeparate__1yGte\",\"number\":\"Input3_number__5nzIG\",\"inputCorrection\":\"Input3_inputCorrection__iKysU\",\"redBackground\":\"Input3_redBackground__2aJOF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appComponent\":\"Wednesday_appComponent__2aVo_\",\"textDecoration\":\"Wednesday_textDecoration__2kSzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__389iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__ap28o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2ogfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button3_button__D3wxR\"};","import style from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    const incHandler = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <button disabled={props.disable} onClick={incHandler} className={style.button}>{props.title}</button>\r\n    )\r\n}","import style from './CounterDisplay.module.css'\r\n\r\ntype CounterDisplayPropsType = {\r\n    counterNumber: number\r\n}\r\n\r\nexport const CounterDisplay = (props: CounterDisplayPropsType) => {\r\n    const redText = props.counterNumber === 5 ? style.redNumber : style.number\r\n\r\n    return (\r\n        <div className={redText}>\r\n            {props.counterNumber}\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Button} from '../Button/Button'\r\nimport style from './Counter.module.css'\r\nimport {CounterDisplay} from '../CounterDisplay/CounterDisplay';\r\n\r\nexport const Counter = () => {\r\n    let [inc, setInc] = useState<number>(0)\r\n    let [disableInc, setDisableInc] = useState<boolean>(false)\r\n    let [disableReset, setDisableReset] = useState<boolean>(true)\r\n    useEffect(() => {\r\n        let incLS = localStorage.getItem('incrementMonday')\r\n        if (incLS) {\r\n            let incNew = JSON.parse(incLS)\r\n            if (incNew === 0) {\r\n                return;\r\n            }\r\n            if (incNew === 5) {\r\n                highestCounterNumber()\r\n                setInc(incNew)\r\n            } else {\r\n                allActiveButtons()\r\n                setInc(incNew)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    const highestCounterNumber = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(false)\r\n    }\r\n\r\n    const allActiveButtons = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(false)\r\n    }\r\n\r\n    const incFunction = () => {\r\n        if (inc >= 5) {\r\n            setDisableInc(true)\r\n            return\r\n        } else {\r\n            inc++\r\n            setInc(inc)\r\n        }\r\n        if (inc === 5) {\r\n            highestCounterNumber()\r\n        }\r\n        if (inc === 1) {\r\n            setDisableReset(false)\r\n        }\r\n        localStorage.setItem('incrementMonday', JSON.stringify(inc))\r\n    }\r\n\r\n    const resetFunction = () => {\r\n        setInc(0)\r\n        setDisableInc(false)\r\n        setDisableReset(true)\r\n        localStorage.setItem('incrementMonday', JSON.stringify(0))\r\n    }\r\n\r\n    return (\r\n        <div className={style.back}>\r\n            <div className={style.middle}>\r\n                <div className={style.counterField}>\r\n                    <CounterDisplay counterNumber={inc}/>\r\n                </div>\r\n                <div className={style.buttonsField}>\r\n                    <Button disable={disableInc} title=\"inc\" callback={incFunction}/>\r\n                    <Button disable={disableReset} title=\"reset\" callback={resetFunction}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from './Monday.module.css'\r\nimport {Counter} from './Components/Counter/Counter';\r\nimport React from 'react';\r\n\r\nexport const Monday = () => {\r\n    return(\r\n        <div className={style.appComponent}>\r\n            <h3 className={style.textDecoration}>Monday Exam</h3>\r\n            <Counter/>\r\n        </div>\r\n    )\r\n}","import style from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    const incHandler = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <button disabled={props.disable} onClick={incHandler} className={style.button}>{props.title}</button>\r\n    )\r\n}","import style from './CounterDisplay.module.css'\r\n\r\ntype CounterDisplayPropsType = {\r\n    counterNumber: number\r\n    max: number\r\n    setMessage: boolean\r\n    error: boolean\r\n}\r\n\r\nexport const CounterDisplay = (props: CounterDisplayPropsType) => {\r\n    const message = () => {\r\n        if (props.error) {\r\n            return <div className={style.setMessageRed}>Incorrect value!</div>\r\n        }\r\n        if (props.setMessage) {\r\n            return <div className={props.counterNumber === props.max ? style.redNumber : style.number}>{props.counterNumber}</div>\r\n        } else {\r\n            return <div className={style.setMessage}>enter values and press 'set'</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {message()}\r\n        </div>\r\n    )\r\n}","import style from './Input.module.css'\r\nimport {ChangeEvent} from 'react';\r\n\r\ntype InputPropsType = {\r\n    name: string\r\n    value: number\r\n    onChangeCallback: (value: number) => void\r\n    inputStyle: string\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeCallback(+e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.fieldSeparate}>\r\n            <span className={style.number}>{props.name}</span>\r\n            <input className={props.inputStyle} type={'number'} value={props.value} onChange={onChangeHandler}/>\r\n        </div>\r\n    )\r\n}","import style from './SetDisplay.module.css'\r\nimport {useEffect, useState} from 'react';\r\nimport {Input} from '../Input/Input';\r\n\r\ntype SetDisplayPropsType = {\r\n    start: number\r\n    max: number\r\n    onChangeMax: (value: number) => void\r\n    onChangeStart: (value: number) => void\r\n}\r\n\r\nexport const SetDisplay = (props: SetDisplayPropsType) => {\r\n    let [inputStyleMax, setInputStyleMax] = useState<string>(style.inputCorrection)\r\n    let [inputStyleStart, setInputStyleStart] = useState<string>(style.inputCorrection)\r\n    useEffect( () => {\r\n        if (props.max < props.start) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n        if (props.max <= 0 && props.start > 0 && props.start !== props.max) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n        if (props.max === props.start) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(`${style.inputCorrection} ${style.redBackground}`)\r\n            return\r\n        }\r\n        if (props.start < 0 && props.max > 0) {\r\n            setInputStyleMax(style.inputCorrection)\r\n            setInputStyleStart(`${style.inputCorrection} ${style.redBackground}`)\r\n            return\r\n        }\r\n        if (props.start >= 0 && props.max > 0) {\r\n            setInputStyleMax(style.inputCorrection)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n    }, [props.max, props.start])\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.fieldSeparate}>\r\n                <Input name={\"max value:\"} value={props.max} onChangeCallback={props.onChangeMax} inputStyle={inputStyleMax}/>\r\n            </div>\r\n            <div className={style.fieldSeparate}>\r\n                <Input name={\"start value:\"} value={props.start} onChangeCallback={props.onChangeStart} inputStyle={inputStyleStart}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Button} from '../Button/Button'\r\nimport {CounterDisplay} from '../CounterDisplay/CounterDisplay'\r\nimport style from './Counter.module.css'\r\nimport {SetDisplay} from '../SetDisplay/SetDisplay';\r\n\r\n\r\nexport const Counter = () => {\r\n    // Set initial values\r\n    const incBegin = 0\r\n    const startBegin = 0\r\n    const maxBegin = 5\r\n\r\n    //All useState functions\r\n    let [inc, setInc] = useState<number>(incBegin)\r\n    let [start, setStart] = useState<number>(startBegin)\r\n    let [max, setMax] = useState<number>(maxBegin)\r\n    let [disableInc, setDisableInc] = useState<boolean>(false)\r\n    let [disableReset, setDisableReset] = useState<boolean>(true)\r\n    let [disableSet, setDisableSet] = useState<boolean>(true)\r\n    let [error, setError] = useState<boolean>(false)\r\n\r\n    //Button setting functions. Active or disable\r\n    const setIncOnResetOn = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(false)\r\n    }\r\n    const setIncOnResetOff = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(true)\r\n    }\r\n    const setIncOffResetOn = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(false)\r\n    }\r\n    const setIncOffResetOff = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(true)\r\n    }\r\n    const setOffForAll = () => {\r\n        setIncOffResetOff()\r\n        setDisableSet(true)\r\n    }\r\n\r\n    //Checkin and correcting the button status for active or disable them\r\n    const buttonsSettingsForIncReset = () => {\r\n        let incrementTuesday = localStorage.getItem('incrementTuesday1')\r\n        let startValue = localStorage.getItem('startValue1')\r\n        let maxValue = localStorage.getItem('maxValue1')\r\n        if ((incrementTuesday !== maxValue) && (incrementTuesday !== startValue)) setIncOnResetOn()\r\n        if (incrementTuesday === maxValue) setIncOffResetOn()\r\n        if (incrementTuesday === startValue) setIncOnResetOff()\r\n    }\r\n\r\n    //useEffect using after the app is updated\r\n    useEffect(() => {\r\n        let incrementTuesday = localStorage.getItem('incrementTuesday1')\r\n        let startValue = localStorage.getItem('startValue1')\r\n        let maxValue = localStorage.getItem('maxValue1')\r\n\r\n        //Set the initial Local Storage data or set the updated values for useState\r\n        incrementTuesday\r\n            ? setInc(JSON.parse(incrementTuesday))\r\n            : localStorage.setItem('incrementTuesday1', JSON.stringify(incBegin))\r\n        startValue\r\n            ? setStart(JSON.parse(startValue))\r\n            : localStorage.setItem('startValue1', JSON.stringify(startBegin))\r\n        maxValue\r\n            ? setMax(JSON.parse(maxValue))\r\n            : localStorage.setItem('maxValue1', JSON.stringify(maxBegin))\r\n\r\n        buttonsSettingsForIncReset()\r\n    }, [])\r\n\r\n    const incFunction = () => {\r\n        inc++\r\n        if (inc >= start) setDisableReset(false)\r\n        if (inc >= max) {\r\n            setDisableInc(true)\r\n            setInc(inc)\r\n        } else setInc(inc)\r\n        localStorage.setItem('incrementTuesday1', JSON.stringify(inc))\r\n    }\r\n    const resetFunction = () => {\r\n        setInc(start)\r\n        setIncOnResetOff()\r\n        localStorage.setItem('incrementTuesday1', JSON.stringify(start))\r\n    }\r\n\r\n    const onChangeHandler = (valueStart: number, valueMax: number) => {\r\n        let startValue = localStorage.getItem('startValue1')\r\n        let maxValue = localStorage.getItem('maxValue1')\r\n        if ((startValue === valueStart.toString()) && (maxValue === valueMax.toString())) {\r\n            buttonsSettingsForIncReset()\r\n            setDisableSet(true)\r\n            setError(false)\r\n            return\r\n        }\r\n        if (valueMax <= 0 || valueMax <= valueStart || valueStart < 0 || valueMax === valueStart) {\r\n            setError(true)\r\n            setOffForAll()\r\n            return\r\n        } else {\r\n            setDisableSet(false)\r\n            setIncOffResetOff()\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const onChangeMax = (value: number) => {\r\n        setMax(value)\r\n        onChangeHandler(start, value)\r\n    }\r\n    const onChangeStart = (value: number) => {\r\n        setStart(value)\r\n        onChangeHandler(value, max)\r\n    }\r\n    const setFunction = () => {\r\n        localStorage.setItem('maxValue1', JSON.stringify(max))\r\n        localStorage.setItem('startValue1', JSON.stringify(start))\r\n        localStorage.setItem('incrementTuesday1', JSON.stringify(start))\r\n        setInc(start)\r\n        setDisableSet(true)\r\n        setIncOnResetOff()\r\n    }\r\n\r\n    return (\r\n        <div className={style.twoCounters}>\r\n            <div className={style.back}>\r\n                <div className={style.middle}>\r\n                    <div className={style.counterField}>\r\n                        <SetDisplay start={start} max={max} onChangeMax={onChangeMax} onChangeStart={onChangeStart}/>\r\n                    </div>\r\n                    <div className={style.buttonsField}>\r\n                        <Button disable={disableSet} title=\"set\" callback={setFunction}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.back}>\r\n                <div className={style.middle}>\r\n                    <div className={style.counterField}>\r\n                        <CounterDisplay counterNumber={inc} max={max} setMessage={disableSet} error={error}/>\r\n                    </div>\r\n                    <div className={style.buttonsField}>\r\n                        <Button disable={disableInc} title=\"inc\" callback={incFunction}/>\r\n                        <Button disable={disableReset} title=\"reset\" callback={resetFunction}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from './TuesdayFirst.module.css'\r\nimport React from 'react';\r\nimport { Counter } from './Components/Counter/Counter';\r\n\r\nexport const TuesdayFirst = () => {\r\n    return(\r\n        <div className={style.appComponent}>\r\n            <h3 className={style.textDecoration}>Tuesday Exam (first version)</h3>\r\n            <Counter/>\r\n        </div>\r\n    )\r\n}","import style from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    const incHandler = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <button disabled={props.disable} onClick={incHandler} className={style.button}>{props.title}</button>\r\n    )\r\n}","import style from './CounterDisplay.module.css'\r\n\r\ntype CounterDisplayPropsType = {\r\n    counterNumber: number\r\n    max: number\r\n    setMessage: boolean\r\n    error: boolean\r\n}\r\n\r\nexport const CounterDisplay = (props: CounterDisplayPropsType) => {\r\n    const message = () => {\r\n        if (props.error) {\r\n            return <div className={style.setMessageRed}>Incorrect value!</div>\r\n        }\r\n        if (props.setMessage) {\r\n            return <div className={props.counterNumber === props.max ? style.redNumber : style.number}>{props.counterNumber}</div>\r\n        } else {\r\n            return <div className={style.setMessage}>enter values and press 'set'</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {message()}\r\n        </div>\r\n    )\r\n}","import style from './Input.module.css'\r\nimport {ChangeEvent} from 'react';\r\n\r\ntype InputPropsType = {\r\n    name: string\r\n    value: number\r\n    onChangeCallback: (value: number) => void\r\n    inputStyle: string\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeCallback(+e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.fieldSeparate}>\r\n            <span className={style.number}>{props.name}</span>\r\n            <input className={props.inputStyle} type={'number'} value={props.value} onChange={onChangeHandler}/>\r\n        </div>\r\n    )\r\n}","import style from './SetDisplay.module.css'\r\nimport {useEffect, useState} from 'react';\r\nimport {Input} from '../Input/Input';\r\n\r\ntype SetDisplayPropsType = {\r\n    start: number\r\n    max: number\r\n    onChangeMax: (value: number) => void\r\n    onChangeStart: (value: number) => void\r\n}\r\n\r\nexport const SetDisplay = (props: SetDisplayPropsType) => {\r\n    let [inputStyleMax, setInputStyleMax] = useState<string>(style.inputCorrection)\r\n    let [inputStyleStart, setInputStyleStart] = useState<string>(style.inputCorrection)\r\n    useEffect( () => {\r\n        if (props.max < props.start) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n        if (props.max <= 0 && props.start > 0 && props.start !== props.max) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n        if (props.max === props.start) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(`${style.inputCorrection} ${style.redBackground}`)\r\n            return\r\n        }\r\n        if (props.start < 0 && props.max > 0) {\r\n            setInputStyleMax(style.inputCorrection)\r\n            setInputStyleStart(`${style.inputCorrection} ${style.redBackground}`)\r\n            return\r\n        }\r\n        if (props.start >= 0 && props.max > 0) {\r\n            setInputStyleMax(style.inputCorrection)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n    }, [props.max, props.start])\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.fieldSeparate}>\r\n                <Input name={\"max value:\"} value={props.max} onChangeCallback={props.onChangeMax} inputStyle={inputStyleMax}/>\r\n            </div>\r\n            <div className={style.fieldSeparate}>\r\n                <Input name={\"start value:\"} value={props.start} onChangeCallback={props.onChangeStart} inputStyle={inputStyleStart}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Button} from '../Button/Button'\r\nimport {CounterDisplay} from '../CounterDisplay/CounterDisplay'\r\nimport style from './Counter.module.css'\r\nimport {SetDisplay} from '../SetDisplay/SetDisplay';\r\n\r\n\r\nexport const Counter = () => {\r\n    // Set initial values\r\n    const incBegin = 0\r\n    const startBegin = 0\r\n    const maxBegin = 5\r\n\r\n    //All useState functions\r\n    let [inc, setInc] = useState<number>(incBegin)\r\n    let [start, setStart] = useState<number>(startBegin)\r\n    let [max, setMax] = useState<number>(maxBegin)\r\n    let [disableInc, setDisableInc] = useState<boolean>(false)\r\n    let [disableReset, setDisableReset] = useState<boolean>(true)\r\n    let [disableSet, setDisableSet] = useState<boolean>(true)\r\n    let [error, setError] = useState<boolean>(false)\r\n    //Show main or setting window\r\n    let [showMain, setShowMain] = useState<boolean>(true)\r\n\r\n    //Button setting functions. Active or disable\r\n    const setIncOnResetOn = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(false)\r\n    }\r\n    const setIncOnResetOff = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(true)\r\n    }\r\n    const setIncOffResetOn = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(false)\r\n    }\r\n    const setIncOffResetOff = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(true)\r\n    }\r\n    const setOffForAll = () => {\r\n        setIncOffResetOff()\r\n        setDisableSet(true)\r\n    }\r\n\r\n    //Checkin and correcting the button status for active or disable them\r\n    const buttonsSettingsForIncReset = () => {\r\n        let incrementTuesday = localStorage.getItem('incrementTuesday2')\r\n        let startValue = localStorage.getItem('startValue2')\r\n        let maxValue = localStorage.getItem('maxValue2')\r\n        if ((incrementTuesday !== maxValue) && (incrementTuesday !== startValue)) setIncOnResetOn()\r\n        if (incrementTuesday === maxValue) setIncOffResetOn()\r\n        if (incrementTuesday === startValue) setIncOnResetOff()\r\n    }\r\n\r\n    //useEffect using after the app is updated\r\n    useEffect(() => {\r\n        let incrementTuesday = localStorage.getItem('incrementTuesday2')\r\n        let startValue = localStorage.getItem('startValue2')\r\n        let maxValue = localStorage.getItem('maxValue2')\r\n\r\n        //Set the initial Local Storage data or set the updated values for useState\r\n        incrementTuesday\r\n            ? setInc(JSON.parse(incrementTuesday))\r\n            : localStorage.setItem('incrementTuesday2', JSON.stringify(incBegin))\r\n        startValue\r\n            ? setStart(JSON.parse(startValue))\r\n            : localStorage.setItem('startValue2', JSON.stringify(startBegin))\r\n        maxValue\r\n            ? setMax(JSON.parse(maxValue))\r\n            : localStorage.setItem('maxValue2', JSON.stringify(maxBegin))\r\n\r\n        buttonsSettingsForIncReset()\r\n    }, [])\r\n\r\n    const incFunction = () => {\r\n        inc++\r\n        if (inc >= start) setDisableReset(false)\r\n        if (inc >= max) {\r\n            setDisableInc(true)\r\n            setInc(inc)\r\n        } else setInc(inc)\r\n        localStorage.setItem('incrementTuesday2', JSON.stringify(inc))\r\n    }\r\n    const resetFunction = () => {\r\n        setInc(start)\r\n        setIncOnResetOff()\r\n        localStorage.setItem('incrementTuesday2', JSON.stringify(start))\r\n    }\r\n\r\n    const onChangeHandler = (valueStart: number, valueMax: number) => {\r\n        let startValue = localStorage.getItem('startValue2')\r\n        let maxValue = localStorage.getItem('maxValue2')\r\n        if ((startValue === valueStart.toString()) && (maxValue === valueMax.toString())) {\r\n            buttonsSettingsForIncReset()\r\n            setDisableSet(true)\r\n            setError(false)\r\n            return\r\n        }\r\n        if (valueMax <= 0 || valueMax <= valueStart || valueStart < 0 || valueMax === valueStart) {\r\n            setError(true)\r\n            setOffForAll()\r\n            return\r\n        } else {\r\n            setDisableSet(false)\r\n            setIncOffResetOff()\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const onChangeMax = (value: number) => {\r\n        setMax(value)\r\n        onChangeHandler(start, value)\r\n    }\r\n    const onChangeStart = (value: number) => {\r\n        setStart(value)\r\n        onChangeHandler(value, max)\r\n    }\r\n    const setFunction = () => {\r\n        localStorage.setItem('maxValue2', JSON.stringify(max))\r\n        localStorage.setItem('startValue2', JSON.stringify(start))\r\n        localStorage.setItem('incrementTuesday2', JSON.stringify(start))\r\n        setInc(start)\r\n        setDisableSet(true)\r\n        setIncOnResetOff()\r\n        setShowMain(!showMain)\r\n    }\r\n\r\n    const changeWindowHandler = () => {\r\n        setShowMain(!showMain)\r\n    }\r\n\r\n    return (\r\n        <div className={style.twoCounters}>\r\n            {!showMain && <div className={style.back}>\r\n                <div className={style.middle}>\r\n                    <div className={style.counterField}>\r\n                        <SetDisplay start={start} max={max} onChangeMax={onChangeMax} onChangeStart={onChangeStart}/>\r\n                    </div>\r\n                    <div className={style.buttonsField}>\r\n                        <Button disable={disableSet} title=\"set\" callback={setFunction}/>\r\n                        <Button disable={false} title=\"back\" callback={changeWindowHandler}/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            {showMain && <div className={style.back}>\r\n                <div className={style.middle}>\r\n                    <div className={style.counterField}>\r\n                        <CounterDisplay counterNumber={inc} max={max} setMessage={disableSet} error={error}/>\r\n                    </div>\r\n                    <div className={style.buttonsField}>\r\n                        <Button disable={disableInc} title=\"inc\" callback={incFunction}/>\r\n                        <Button disable={disableReset} title=\"reset\" callback={resetFunction}/>\r\n                        <Button disable={false} title=\"set\" callback={changeWindowHandler}/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import style from '../TuesdayFirstVersion/TuesdayFirst.module.css';\r\nimport React from 'react';\r\nimport {Counter} from './Components/Counter/Counter';\r\n\r\n\r\nexport const TuesdaySecond = () => {\r\n    return (\r\n        <div className={style.appComponent}>\r\n            <h3 className={style.textDecoration}>Tuesday Exam (second version)</h3>\r\n            <Counter/>\r\n        </div>\r\n    )\r\n}","import style from './Input3.module.css'\r\nimport {ChangeEvent} from 'react';\r\n\r\ntype InputPropsType = {\r\n    name: string\r\n    value: number\r\n    onChangeCallback: (value: number) => void\r\n    inputStyle: string\r\n}\r\n\r\nexport const Input3 = (props: InputPropsType) => {\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeCallback(+e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.fieldSeparate}>\r\n            <span className={style.number}>{props.name}</span>\r\n            <input className={props.inputStyle} type={'number'} value={props.value} onChange={onChangeHandler}/>\r\n        </div>\r\n    )\r\n}","export type InitialStateForValuesType = typeof initialState\r\n\r\nconst initialState = {\r\n    start: 0,\r\n    max: 5,\r\n    tempStart: 0,\r\n    tempMax: 5,\r\n    increment: 0\r\n}\r\n\r\nexport const reducerForValues = (state: InitialStateForValuesType = initialState, action: ReducerForValuesAT): InitialStateForValuesType => {\r\n    switch (action.type) {\r\n        case 'START-VALUE':\r\n            return {...state, start: action.value}\r\n        case 'MAX-VALUE':\r\n            return {...state, max: action.value}\r\n        case 'INCREMENT-VALUE':\r\n            return {...state, increment: state.increment + 1}\r\n        case 'TEMPMAX-VALUE':\r\n            return {...state, tempMax: action.value}\r\n        case 'TEMPSTART-VALUE':\r\n            return {...state, tempStart: action.value}\r\n        case 'INCREMENT-VALUE-UPDATE':\r\n            return {...state, increment: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ReducerForValuesAT = StartValueAT | MaxValueAT | IncrementValueAT | TempStartValueAT | TempMaxValueAT | incrementUpdateValueAT\r\ntype StartValueAT = {type: \"START-VALUE\", value: number}\r\ntype MaxValueAT = {type: \"MAX-VALUE\", value: number}\r\ntype TempStartValueAT = {type: \"TEMPSTART-VALUE\", value: number}\r\ntype TempMaxValueAT = {type: \"TEMPMAX-VALUE\", value: number}\r\ntype IncrementValueAT = {type: \"INCREMENT-VALUE\"}\r\ntype incrementUpdateValueAT = {type: \"INCREMENT-VALUE-UPDATE\", value: number}\r\n\r\nexport const startValueAC = (value: number) => ({type: \"START-VALUE\" as const, value})\r\nexport const maxValueAC = (value: number) => ({type: \"MAX-VALUE\" as const, value})\r\nexport const tempStartValueAC = (value: number) => ({type: \"TEMPSTART-VALUE\" as const, value})\r\nexport const tempMaxValueAC = (value: number) => ({type: \"TEMPMAX-VALUE\" as const, value})\r\nexport const incrementValueAC = () => ({type: \"INCREMENT-VALUE\" as const})\r\nexport const incrementUpdateValueAC = (value: number) => ({type: \"INCREMENT-VALUE-UPDATE\" as const, value})","export type InitialStateButtonType = typeof initialState\r\n\r\nconst initialState = {\r\n    setButtonValue: false,\r\n    incButtonValue: true,\r\n    resetButtonValue: false\r\n}\r\n\r\nexport const reducerForButtons = (state: InitialStateButtonType = initialState, action: ReducerForButtonsAT): InitialStateButtonType => {\r\n    switch (action.type) {\r\n        case 'BUTTON-SET-VALUE-CHANGE':\r\n            return {...state, setButtonValue: action.value}\r\n        case 'BUTTON-INC-VALUE-CHANGE':\r\n            return {...state, incButtonValue: action.value}\r\n        case 'BUTTON-RESET-VALUE-CHANGE':\r\n            return {...state, resetButtonValue: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ReducerForButtonsAT = SetButtonValueAT | IncButtonValueAT | ResetButtonValueAT\r\ntype SetButtonValueAT = {type: \"BUTTON-SET-VALUE-CHANGE\", value: boolean}\r\ntype IncButtonValueAT = {type: \"BUTTON-INC-VALUE-CHANGE\", value: boolean}\r\ntype ResetButtonValueAT = {type: \"BUTTON-RESET-VALUE-CHANGE\", value: boolean}\r\n\r\nexport const setButtonValueAC = (value: boolean) => ({type: \"BUTTON-SET-VALUE-CHANGE\" as const, value})\r\nexport const incButtonValueAC = (value: boolean) => ({type: \"BUTTON-INC-VALUE-CHANGE\" as const, value})\r\nexport const resetButtonValueAC = (value: boolean) => ({type: \"BUTTON-RESET-VALUE-CHANGE\" as const, value})\r\n","export type initialStateForScreensType = typeof initialState\r\n\r\nconst initialState = {\r\n    counterScreen: true,\r\n    setValueScreen: false,\r\n    errorScreen: false,\r\n}\r\n\r\nexport const reducerForScreens = (state: initialStateForScreensType = initialState, action: ReducerForScreensAT): initialStateForScreensType => {\r\n    switch (action.type) {\r\n        case 'SCREEN-COUNTER-ON':\r\n            return {...state, counterScreen: true, setValueScreen: false, errorScreen: false}\r\n        case 'SCREEN-SET-ON':\r\n            return {...state, counterScreen: false, setValueScreen: true, errorScreen: false}\r\n        case 'SCREEN-ERROR-ON':\r\n            return {...state, counterScreen: false, setValueScreen: false, errorScreen: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ReducerForScreensAT = ScreenCounterDisableModeAT | ScreenSetDisableModeAT | ScreenErrorDisableModeAT\r\ntype ScreenCounterDisableModeAT = {type: \"SCREEN-COUNTER-ON\"}\r\ntype ScreenSetDisableModeAT = {type: \"SCREEN-SET-ON\"}\r\ntype ScreenErrorDisableModeAT = {type: \"SCREEN-ERROR-ON\"}\r\n\r\nexport const screenCounterDisableModeAC = () => ({type: \"SCREEN-COUNTER-ON\" as const})\r\nexport const screenSetDisableModeAC = () => ({type: \"SCREEN-SET-ON\" as const})\r\nexport const screenErrorDisableModeAC = () => ({type: \"SCREEN-ERROR-ON\" as const})","import style from './SetDisplay3.module.css'\r\nimport {Input3} from '../Input3/Input3';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ReducersType} from '../../bll/store';\r\nimport {InitialStateForValuesType, tempMaxValueAC, tempStartValueAC} from '../../bll/reducerForValues';\r\nimport {\r\n    incButtonValueAC,\r\n    InitialStateButtonType,\r\n    resetButtonValueAC,\r\n    setButtonValueAC\r\n} from '../../bll/reducerForButtons';\r\nimport {\r\n    initialStateForScreensType,\r\n    screenCounterDisableModeAC,\r\n    screenErrorDisableModeAC,\r\n    screenSetDisableModeAC\r\n} from '../../bll/reducerForScreens';\r\n\r\nexport const SetDisplay3 = () => {\r\n    const dispatch = useDispatch()\r\n    const allValues = useSelector<ReducersType, InitialStateForValuesType>(state => state.values)\r\n    const allButtonValues = useSelector<ReducersType, InitialStateButtonType>(state => state.buttons)\r\n    const allScreenValues = useSelector<ReducersType, initialStateForScreensType>(state => state.screens)\r\n\r\n    let inputStyle = !allScreenValues.errorScreen ? style.inputCorrection : `${style.inputCorrection} ${style.redBackground}`\r\n\r\n    //Universal function\r\n    const allButtonsSet = (set: boolean, inc: boolean, reset: boolean) => {\r\n        dispatch(setButtonValueAC(set))\r\n        dispatch(incButtonValueAC(inc))\r\n        dispatch(resetButtonValueAC(reset))\r\n    }\r\n    // Check Counter Display for all the values\r\n    const checkValuesForCounterDisplay = () => {\r\n        dispatch(screenCounterDisableModeAC())\r\n        if (allValues.increment === allValues.start) allButtonsSet(false, true, false)\r\n        if (allValues.increment > allValues.start && allValues.increment < allValues.max) allButtonsSet(false, true, true)\r\n        if (allValues.increment === allValues.max) allButtonsSet(false, false, true)\r\n    }\r\n\r\n    const changeStartValue = (value: number) => {\r\n        if (value > allValues.tempMax) return\r\n        if (value === allValues.start && allValues.max === allValues.tempMax) {\r\n            dispatch(tempStartValueAC(value))\r\n            checkValuesForCounterDisplay()\r\n            return\r\n        }\r\n        if (value === allValues.tempMax || value < 0) {\r\n            if (value < -1) {\r\n                return\r\n            } else {\r\n                dispatch(tempStartValueAC(value))\r\n                dispatch(screenErrorDisableModeAC())\r\n                allButtonsSet(false, false, false)\r\n                return\r\n            }\r\n        }\r\n        if (value < allValues.tempMax || value !== allValues.tempStart) {\r\n            dispatch(tempStartValueAC(value))\r\n            if (!allButtonValues.setButtonValue) {\r\n                dispatch(screenSetDisableModeAC())\r\n                allButtonsSet(true, false, false)\r\n            }\r\n        }\r\n    }\r\n    const changeMaxValue = (value: number) => {\r\n        if (allValues.tempStart === -1) return\r\n        if (value === allValues.tempStart - 1) return\r\n        if (value === allValues.max && allValues.start === allValues.tempStart) {\r\n            dispatch(tempMaxValueAC(value))\r\n            checkValuesForCounterDisplay()\r\n        }\r\n        if (value > allValues.tempStart || value !== allValues.tempMax) {\r\n            dispatch(tempMaxValueAC(value))\r\n            if (!allButtonValues.setButtonValue) {\r\n                dispatch(screenSetDisableModeAC())\r\n                allButtonsSet(true, false, false)\r\n            }\r\n        }\r\n        if (value === allValues.tempStart) {\r\n            dispatch(screenErrorDisableModeAC())\r\n            allButtonsSet(false, false, false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.fieldSeparate}>\r\n                <Input3 name={'max value:'} value={allValues.tempMax} onChangeCallback={changeMaxValue}\r\n                        inputStyle={inputStyle}/>\r\n            </div>\r\n            <div className={style.fieldSeparate}>\r\n                <Input3 name={'start value:'} value={allValues.tempStart} onChangeCallback={changeStartValue}\r\n                        inputStyle={inputStyle}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from './Button3.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Button3 = (props: ButtonPropsType) => {\r\n\r\n    const incHandler = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <button disabled={props.disable} onClick={incHandler} className={style.button}>{props.title}</button>\r\n    )\r\n}","import style from './CounterDisplay3.module.css'\r\nimport {useSelector} from 'react-redux';\r\nimport {ReducersType} from '../../bll/store';\r\nimport {initialStateForScreensType} from '../../bll/reducerForScreens';\r\nimport {InitialStateForValuesType} from '../../bll/reducerForValues';\r\n\r\nexport const CounterDisplay3 = () => {\r\n    const screenValues = useSelector<ReducersType, initialStateForScreensType>(state => state.screens)\r\n    const allValues = useSelector<ReducersType, InitialStateForValuesType>(state => state.values)\r\n\r\n    return (\r\n        <div>\r\n            {screenValues.counterScreen && <div className={allValues.max === allValues.increment ? style.redNumber : style.number}>{allValues.increment}</div>}\r\n            {screenValues.setValueScreen && <div className={style.setMessage}>enter values and press 'set'</div>}\r\n            {screenValues.errorScreen && <div className={style.setMessageRed}>Incorrect value!</div>}\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport style from './Counter3.module.css'\r\nimport {SetDisplay3} from '../SetDisplay3/SetDisplay3';\r\nimport {Button3} from '../Button3/Button3';\r\nimport {CounterDisplay3} from '../CounterDisplay3/CounterDisplay3';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ReducersType} from '../../bll/store';\r\nimport {\r\n    incButtonValueAC,\r\n    InitialStateButtonType,\r\n    resetButtonValueAC,\r\n    setButtonValueAC\r\n} from '../../bll/reducerForButtons';\r\nimport {\r\n    incrementUpdateValueAC,\r\n    incrementValueAC,\r\n    InitialStateForValuesType,\r\n    maxValueAC,\r\n    startValueAC\r\n} from '../../bll/reducerForValues';\r\nimport {screenCounterDisableModeAC} from '../../bll/reducerForScreens';\r\n\r\nexport const Counter3 = () => {\r\n    const buttonValues = useSelector<ReducersType, InitialStateButtonType>(state => state.buttons)\r\n    const allValues = useSelector<ReducersType, InitialStateForValuesType>(state => state.values)\r\n    const dispatch = useDispatch()\r\n\r\n    const setValues = () => {\r\n        dispatch(setButtonValueAC(false))\r\n        dispatch(incButtonValueAC(true))\r\n        dispatch(resetButtonValueAC(false))\r\n        dispatch(startValueAC(allValues.tempStart))\r\n        dispatch(maxValueAC(allValues.tempMax))\r\n        dispatch(incrementUpdateValueAC(allValues.tempStart))\r\n        dispatch(screenCounterDisableModeAC())\r\n    }\r\n    const increaseIncrement = () => {\r\n        if (allValues.increment === allValues.start) dispatch(resetButtonValueAC(true))\r\n        if (allValues.increment + 1 === allValues.max) {\r\n            dispatch(incButtonValueAC(false))\r\n            dispatch(incrementValueAC())\r\n        } else dispatch(incrementValueAC())\r\n    }\r\n    const resetIncrement = () => {\r\n        dispatch(incButtonValueAC(true))\r\n        dispatch(resetButtonValueAC(false))\r\n        dispatch(incrementUpdateValueAC(allValues.start))\r\n    }\r\n\r\n    return (\r\n        <div className={style.twoCounters}>\r\n            <div className={style.back}>\r\n                <div className={style.middle}>\r\n                    <div className={style.counterField}>\r\n                        <SetDisplay3 />\r\n                    </div>\r\n                    <div className={style.buttonsField}>\r\n                        <Button3 disable={!buttonValues.setButtonValue} title=\"set\" callback={setValues}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.back}>\r\n                <div className={style.middle}>\r\n                    <div className={style.counterField}>\r\n                        <CounterDisplay3/>\r\n                    </div>\r\n                    <div className={style.buttonsField}>\r\n                        <Button3 disable={!buttonValues.incButtonValue} title=\"inc\" callback={increaseIncrement}/>\r\n                        <Button3 disable={!buttonValues.resetButtonValue} title=\"reset\" callback={resetIncrement}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Counter3 } from './Components/Counter3/Counter3';\r\nimport style from './Wednesday.module.css'\r\n\r\nexport const Wednesday = () => {\r\n    return (\r\n        <div className={style.appComponent}>\r\n            <h3 className={style.textDecoration}>Wednesday Exam</h3>\r\n            <Counter3/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {Monday} from './MonthlyExams/Monday/Monday';\nimport {TuesdayFirst} from './MonthlyExams/TuesdayFirstVersion/TuesdayFirst';\nimport {TuesdaySecond} from './MonthlyExams/TuesdaySecondVersion/TuesdaySecond';\nimport {Wednesday} from './MonthlyExams/Wednesday/Wednesday';\n\n\nfunction App() {\n    return (\n        <div>\n            <Monday/>\n            <TuesdayFirst/>\n            <TuesdaySecond/>\n            <Wednesday/>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\r\nimport {reducerForValues} from './reducerForValues';\r\nimport {reducerForButtons} from './reducerForButtons';\r\nimport {reducerForScreens} from './reducerForScreens';\r\nimport {loadLocalStorage, saveLocalStorage} from './localStorageFunctions';\r\n\r\nexport type ReducersType = ReturnType<typeof reducers>\r\ntype StoreType = typeof store\r\n\r\nexport const reducers = combineReducers({\r\n    values: reducerForValues,\r\n    buttons: reducerForButtons,\r\n    screens: reducerForScreens\r\n})\r\n\r\nexport const store = createStore(reducers, loadLocalStorage())\r\n\r\nstore.subscribe(() => {\r\n    saveLocalStorage({\r\n        values: store.getState().values,\r\n        buttons: store.getState().buttons,\r\n        screens: store.getState().screens,\r\n    })\r\n})\r\n","import {ReducersType} from './store';\r\n\r\nexport const saveLocalStorage = (state: ReducersType) => {\r\n    let saverToLocalStorage = JSON.stringify(state)\r\n    localStorage.setItem(\"state\", saverToLocalStorage)\r\n}\r\nexport const loadLocalStorage = () => {\r\n    let loaderFromLocalStorageChecker = localStorage.getItem(\"state\")\r\n    if (loaderFromLocalStorageChecker) return JSON.parse(loaderFromLocalStorageChecker)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './MonthlyExams/Wednesday/bll/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}