{"version":3,"sources":["Components/Counter/Counter.module.css","App.module.css","Components/Counter/Button/Button.module.css","Components/Counter/Button/Button.tsx","Components/Counter/Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","props","disabled","disable","onClick","callback","className","style","button","title","Counter","useState","inc","setInc","disableInc","setDisableInc","disableReset","setDisableReset","back","middle","counterField","redNumber","number","buttonsField","App","appComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2EACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,aAAe,8BAA8B,aAAe,8BAA8B,OAAS,wBAAwB,UAAY,6B,mBCAvND,EAAOC,QAAU,CAAC,aAAe,4B,gBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,qJCOdC,EAAS,SAACC,GAMnB,OACI,wBAAQC,SAAUD,EAAME,QAASC,QALlB,WACfH,EAAMI,YAIgDC,UAAWC,IAAMC,OAAvE,SAAgFP,EAAMQ,S,gBCXjFC,EAAU,WAAO,IAAD,EACLC,mBAAiB,GADZ,mBACpBC,EADoB,KACfC,EADe,OAESF,oBAAkB,GAF3B,mBAEpBG,EAFoB,KAERC,EAFQ,OAGaJ,oBAAkB,GAH/B,mBAGpBK,EAHoB,KAGNC,EAHM,KA4BzB,OACI,qBAAKX,UAAWC,IAAMW,KAAtB,SACI,sBAAKZ,UAAWC,IAAMY,OAAtB,UACI,qBAAKb,UAAWC,IAAMa,aAAtB,SACI,qBAAKd,UAAiB,IAANM,EAAUL,IAAMc,UAAYd,IAAMe,OAAlD,SACKV,MAGT,sBAAKN,UAAWC,IAAMgB,aAAtB,UACI,cAAC,EAAD,CAAQpB,QAASW,EAAYL,MAAM,MAAMJ,SAhCrC,WACZO,GAAO,EACPG,GAAc,IAGdH,IACAC,EAAOD,GAEC,IAARA,IACAG,GAAc,GACdE,GAAgB,IAER,IAARL,GACAK,GAAgB,OAoBR,cAAC,EAAD,CAAQd,QAASa,EAAcP,MAAM,QAAQJ,SAhBvC,WAClBQ,EAAO,GACPE,GAAc,GACdE,GAAgB,eChBTO,MARf,WACI,OACI,qBAAKlB,UAAWC,IAAMkB,aAAtB,SACI,cAAC,EAAD,OCMGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.47f0ac83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Counter_back__wiizL\",\"middle\":\"Counter_middle__2IEfK\",\"counterField\":\"Counter_counterField__2eeqL\",\"buttonsField\":\"Counter_buttonsField__1NDvN\",\"number\":\"Counter_number__2LpP6\",\"redNumber\":\"Counter_redNumber__1a9B1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appComponent\":\"App_appComponent__4j_S6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3TG4P\"};","import style from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    const incHandler = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <button disabled={props.disable} onClick={incHandler} className={style.button}>{props.title}</button>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Button } from './Button/Button'\r\nimport style from './Counter.module.css'\r\n\r\nexport const Counter = () => {\r\n    let [inc, setInc] = useState<number>(0)\r\n    let [disableInc, setDisableInc] = useState<boolean>(false)\r\n    let [disableReset, setDisableReset] = useState<boolean>(true)\r\n\r\n    const incFunction = () => {\r\n        if (inc >= 5) {\r\n            setDisableInc(true)\r\n            return\r\n        } else {\r\n            inc++\r\n            setInc(inc)\r\n        }\r\n        if (inc === 5) {\r\n            setDisableInc(true)\r\n            setDisableReset(false)\r\n        }\r\n        if (inc === 1) {\r\n            setDisableReset(false)\r\n        }\r\n    }\r\n\r\n    const resetFunction = () => {\r\n        setInc(0)\r\n        setDisableInc(false)\r\n        setDisableReset(true)\r\n    }\r\n\r\n    return(\r\n        <div className={style.back}>\r\n            <div className={style.middle}>\r\n                <div className={style.counterField}>\r\n                    <div className={inc===5 ? style.redNumber : style.number}>\r\n                        {inc}\r\n                    </div>\r\n                </div>\r\n                <div className={style.buttonsField}>\r\n                    <Button disable={disableInc} title=\"inc\" callback={incFunction}/>\r\n                    <Button disable={disableReset} title=\"reset\" callback={resetFunction}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport style from './App.module.css';\nimport { Counter } from './Components/Counter/Counter';\n\nfunction App() {\n    return (\n        <div className={style.appComponent}>\n            <Counter/>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}