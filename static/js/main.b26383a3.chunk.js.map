{"version":3,"sources":["MonthlyExams/Monday/Components/Counter/Counter.module.css","MonthlyExams/Monday/Monday.module.css","MonthlyExams/Monday/Components/Button/Button.module.css","MonthlyExams/Monday/Components/Button/Button.tsx","MonthlyExams/Monday/Components/Counter/Counter.tsx","MonthlyExams/Monday/Monday.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","props","disabled","disable","onClick","callback","className","style","button","title","Counter","useState","inc","setInc","disableInc","setDisableInc","disableReset","setDisableReset","useEffect","incLS","localStorage","getItem","incNew","JSON","parse","highestCounterNumber","allActiveButtons","back","middle","counterField","redNumber","number","buttonsField","setItem","stringify","Monday","appComponent","textDecoration","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2EACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,aAAe,8BAA8B,aAAe,8BAA8B,OAAS,wBAAwB,UAAY,6B,kBCAvND,EAAOC,QAAU,CAAC,aAAe,6BAA6B,eAAiB,iC,iBCA/ED,EAAOC,QAAU,CAAC,OAAS,yB,qJCOdC,EAAS,SAACC,GAMnB,OACI,wBAAQC,SAAUD,EAAME,QAASC,QALlB,WACfH,EAAMI,YAIgDC,UAAWC,IAAMC,OAAvE,SAAgFP,EAAMQ,S,gBCXjFC,EAAU,WAAO,IAAD,EACLC,mBAAiB,GADZ,mBACpBC,EADoB,KACfC,EADe,OAESF,oBAAkB,GAF3B,mBAEpBG,EAFoB,KAERC,EAFQ,OAGaJ,oBAAkB,GAH/B,mBAGpBK,EAHoB,KAGNC,EAHM,KAIzBC,qBAAU,WACN,IAAIC,EAAQC,aAAaC,QAAQ,aACjC,GAAIF,EAAO,CACP,IAAIG,EAASC,KAAKC,MAAML,GACxB,GAAe,IAAXG,EACA,OAEW,IAAXA,GACAG,IACAZ,EAAOS,KAEPI,IACAb,EAAOS,OAGhB,IAGH,IAAMG,EAAuB,WACzBV,GAAc,GACdE,GAAgB,IAGdS,EAAmB,WACrBX,GAAc,GACdE,GAAgB,IA2BpB,OACI,qBAAKX,UAAWC,IAAMoB,KAAtB,SACI,sBAAKrB,UAAWC,IAAMqB,OAAtB,UACI,qBAAKtB,UAAWC,IAAMsB,aAAtB,SACI,qBAAKvB,UAAmB,IAARM,EAAYL,IAAMuB,UAAYvB,IAAMwB,OAApD,SACKnB,MAGT,sBAAKN,UAAWC,IAAMyB,aAAtB,UACI,cAAC,EAAD,CAAQ7B,QAASW,EAAYL,MAAM,MAAMJ,SAjCrC,WACZO,GAAO,EACPG,GAAc,IAGdH,IACAC,EAAOD,GAEC,IAARA,GACAa,IAEQ,IAARb,GACAK,GAAgB,GAEpBG,aAAaa,QAAQ,YAAaV,KAAKW,UAAUtB,QAoBrC,cAAC,EAAD,CAAQT,QAASa,EAAcP,MAAM,QAAQJ,SAjBvC,WAClBQ,EAAO,GACPE,GAAc,GACdE,GAAgB,GAChBG,aAAaa,QAAQ,YAAaV,KAAKW,UAAU,gBCrD5CC,EAAS,WAClB,OACI,sBAAK7B,UAAWC,IAAM6B,aAAtB,UACI,oBAAI9B,UAAWC,IAAM8B,eAArB,yBACA,cAAC,EAAD,QCGGC,MARf,WACI,OACI,8BACI,cAAC,EAAD,OCQGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b26383a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Counter_back__TZ0Hn\",\"middle\":\"Counter_middle__3A_Mf\",\"counterField\":\"Counter_counterField__KsYDd\",\"buttonsField\":\"Counter_buttonsField__1wvWv\",\"number\":\"Counter_number__3kmbi\",\"redNumber\":\"Counter_redNumber__1rn8H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appComponent\":\"Monday_appComponent__kopOg\",\"textDecoration\":\"Monday_textDecoration__1-r8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__389iw\"};","import style from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    const incHandler = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <button disabled={props.disable} onClick={incHandler} className={style.button}>{props.title}</button>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Button} from '../Button/Button'\r\nimport style from './Counter.module.css'\r\n\r\nexport const Counter = () => {\r\n    let [inc, setInc] = useState<number>(0)\r\n    let [disableInc, setDisableInc] = useState<boolean>(false)\r\n    let [disableReset, setDisableReset] = useState<boolean>(true)\r\n    useEffect(() => {\r\n        let incLS = localStorage.getItem('increment')\r\n        if (incLS) {\r\n            let incNew = JSON.parse(incLS)\r\n            if (incNew === 0) {\r\n                return;\r\n            }\r\n            if (incNew === 5) {\r\n                highestCounterNumber()\r\n                setInc(incNew)\r\n            } else {\r\n                allActiveButtons()\r\n                setInc(incNew)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    const highestCounterNumber = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(false)\r\n    }\r\n\r\n    const allActiveButtons = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(false)\r\n    }\r\n\r\n    const incFunction = () => {\r\n        if (inc >= 5) {\r\n            setDisableInc(true)\r\n            return\r\n        } else {\r\n            inc++\r\n            setInc(inc)\r\n        }\r\n        if (inc === 5) {\r\n            highestCounterNumber()\r\n        }\r\n        if (inc === 1) {\r\n            setDisableReset(false)\r\n        }\r\n        localStorage.setItem('increment', JSON.stringify(inc))\r\n    }\r\n\r\n    const resetFunction = () => {\r\n        setInc(0)\r\n        setDisableInc(false)\r\n        setDisableReset(true)\r\n        localStorage.setItem('increment', JSON.stringify(0))\r\n    }\r\n\r\n    return (\r\n        <div className={style.back}>\r\n            <div className={style.middle}>\r\n                <div className={style.counterField}>\r\n                    <div className={inc === 5 ? style.redNumber : style.number}>\r\n                        {inc}\r\n                    </div>\r\n                </div>\r\n                <div className={style.buttonsField}>\r\n                    <Button disable={disableInc} title=\"inc\" callback={incFunction}/>\r\n                    <Button disable={disableReset} title=\"reset\" callback={resetFunction}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from './Monday.module.css'\r\nimport {Counter} from './Components/Counter/Counter';\r\nimport React from 'react';\r\n\r\nexport const Monday = () => {\r\n    return(\r\n        <div className={style.appComponent}>\r\n            <h3 className={style.textDecoration}>Monday Exam</h3>\r\n            <Counter/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {Monday} from './MonthlyExams/Monday/Monday';\n\nfunction App() {\n    return (\n        <div>\n            <Monday/>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}