{"version":3,"sources":["MonthlyExams/TuesdayFirstVersion/Components/SetDisplay/SetDisplay.module.css","MonthlyExams/TuesdayFirstVersion/Components/Counter/Counter.module.css","MonthlyExams/Monday/Components/Counter/Counter.module.css","MonthlyExams/TuesdayFirstVersion/Components/CounterDisplay/CounterDisplay.module.css","MonthlyExams/Monday/Monday.module.css","MonthlyExams/Monday/Components/CounterDisplay/CounterDisplay.module.css","MonthlyExams/TuesdayFirstVersion/Tuesday.module.css","MonthlyExams/TuesdayFirstVersion/Components/Input/Input.module.css","MonthlyExams/Monday/Components/Button/Button.module.css","MonthlyExams/TuesdayFirstVersion/Components/Button/Button.module.css","MonthlyExams/Monday/Components/Button/Button.tsx","MonthlyExams/Monday/Components/CounterDisplay/CounterDisplay.tsx","MonthlyExams/Monday/Components/Counter/Counter.tsx","MonthlyExams/Monday/Monday.tsx","MonthlyExams/TuesdayFirstVersion/Components/Button/Button.tsx","MonthlyExams/TuesdayFirstVersion/Components/CounterDisplay/CounterDisplay.tsx","MonthlyExams/TuesdayFirstVersion/Components/Input/Input.tsx","MonthlyExams/TuesdayFirstVersion/Components/SetDisplay/SetDisplay.tsx","MonthlyExams/TuesdayFirstVersion/Components/Counter/Counter.tsx","MonthlyExams/TuesdayFirstVersion/Tuesday.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","props","disabled","disable","onClick","callback","className","style","button","title","CounterDisplay","redText","counterNumber","redNumber","number","Counter","useState","inc","setInc","disableInc","setDisableInc","disableReset","setDisableReset","useEffect","incLS","localStorage","getItem","incNew","JSON","parse","highestCounterNumber","allActiveButtons","back","middle","counterField","buttonsField","setItem","stringify","Monday","appComponent","textDecoration","error","setMessageRed","setMessage","max","Input","fieldSeparate","name","inputStyle","type","value","onChange","e","onChangeCallback","currentTarget","SetDisplay","inputCorrection","inputStyleMax","setInputStyleMax","inputStyleStart","setInputStyleStart","start","redBackground","main","onChangeMax","onChangeStart","setStart","setMax","disableSet","setDisableSet","setError","setIncOnResetOff","setIncOffResetOff","setOffForAll","buttonsSettingsForIncReset","incrementTuesday","startValue","maxValue","twoCounters","toString","Tuesday","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7732a090.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"SetDisplay_main__3tG7u\",\"fieldSeparate\":\"SetDisplay_fieldSeparate__1moIX\",\"number\":\"SetDisplay_number__3QokI\",\"inputCorrection\":\"SetDisplay_inputCorrection__3XtCW\",\"redBackground\":\"SetDisplay_redBackground__2P_ZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Counter_back__2PEdL\",\"middle\":\"Counter_middle__Y--sg\",\"counterField\":\"Counter_counterField__He1Tx\",\"buttonsField\":\"Counter_buttonsField__r3dks\",\"twoCounters\":\"Counter_twoCounters__2NAD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Counter_back__TZ0Hn\",\"middle\":\"Counter_middle__3A_Mf\",\"counterField\":\"Counter_counterField__KsYDd\",\"buttonsField\":\"Counter_buttonsField__1wvWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"CounterDisplay_number__31qiD\",\"redNumber\":\"CounterDisplay_redNumber__3rcL2\",\"setMessage\":\"CounterDisplay_setMessage__3Ehw9\",\"setMessageRed\":\"CounterDisplay_setMessageRed__2_O9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appComponent\":\"Monday_appComponent__kopOg\",\"textDecoration\":\"Monday_textDecoration__1-r8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"CounterDisplay_number__1kZ43\",\"redNumber\":\"CounterDisplay_redNumber__J_RKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appComponent\":\"Tuesday_appComponent__I-Zh8\",\"textDecoration\":\"Tuesday_textDecoration__1nP9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldSeparate\":\"Input_fieldSeparate__3r5l3\",\"number\":\"Input_number__ER0lS\",\"inputCorrection\":\"Input_inputCorrection__24bjD\",\"redBackground\":\"Input_redBackground__2UYYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__389iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__ap28o\"};","import style from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    const incHandler = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <button disabled={props.disable} onClick={incHandler} className={style.button}>{props.title}</button>\r\n    )\r\n}","import style from './CounterDisplay.module.css'\r\n\r\ntype CounterDisplayPropsType = {\r\n    counterNumber: number\r\n}\r\n\r\nexport const CounterDisplay = (props: CounterDisplayPropsType) => {\r\n    const redText = props.counterNumber === 5 ? style.redNumber : style.number\r\n\r\n    return (\r\n        <div className={redText}>\r\n            {props.counterNumber}\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Button} from '../Button/Button'\r\nimport style from './Counter.module.css'\r\nimport {CounterDisplay} from '../CounterDisplay/CounterDisplay';\r\n\r\nexport const Counter = () => {\r\n    let [inc, setInc] = useState<number>(0)\r\n    let [disableInc, setDisableInc] = useState<boolean>(false)\r\n    let [disableReset, setDisableReset] = useState<boolean>(true)\r\n    useEffect(() => {\r\n        let incLS = localStorage.getItem('increment')\r\n        if (incLS) {\r\n            let incNew = JSON.parse(incLS)\r\n            if (incNew === 0) {\r\n                return;\r\n            }\r\n            if (incNew === 5) {\r\n                highestCounterNumber()\r\n                setInc(incNew)\r\n            } else {\r\n                allActiveButtons()\r\n                setInc(incNew)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    const highestCounterNumber = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(false)\r\n    }\r\n\r\n    const allActiveButtons = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(false)\r\n    }\r\n\r\n    const incFunction = () => {\r\n        if (inc >= 5) {\r\n            setDisableInc(true)\r\n            return\r\n        } else {\r\n            inc++\r\n            setInc(inc)\r\n        }\r\n        if (inc === 5) {\r\n            highestCounterNumber()\r\n        }\r\n        if (inc === 1) {\r\n            setDisableReset(false)\r\n        }\r\n        localStorage.setItem('increment', JSON.stringify(inc))\r\n    }\r\n\r\n    const resetFunction = () => {\r\n        setInc(0)\r\n        setDisableInc(false)\r\n        setDisableReset(true)\r\n        localStorage.setItem('increment', JSON.stringify(0))\r\n    }\r\n\r\n    return (\r\n        <div className={style.back}>\r\n            <div className={style.middle}>\r\n                <div className={style.counterField}>\r\n                    <CounterDisplay counterNumber={inc}/>\r\n                </div>\r\n                <div className={style.buttonsField}>\r\n                    <Button disable={disableInc} title=\"inc\" callback={incFunction}/>\r\n                    <Button disable={disableReset} title=\"reset\" callback={resetFunction}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from './Monday.module.css'\r\nimport {Counter} from './Components/Counter/Counter';\r\nimport React from 'react';\r\n\r\nexport const Monday = () => {\r\n    return(\r\n        <div className={style.appComponent}>\r\n            <h3 className={style.textDecoration}>Monday Exam</h3>\r\n            <Counter/>\r\n        </div>\r\n    )\r\n}","import style from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    const incHandler = () => {\r\n        props.callback()\r\n    }\r\n\r\n    return (\r\n        <button disabled={props.disable} onClick={incHandler} className={style.button}>{props.title}</button>\r\n    )\r\n}","import style from './CounterDisplay.module.css'\r\n\r\ntype CounterDisplayPropsType = {\r\n    counterNumber: number\r\n    max: number\r\n    setMessage: boolean\r\n    error: boolean\r\n}\r\n\r\nexport const CounterDisplay = (props: CounterDisplayPropsType) => {\r\n    const message = () => {\r\n        if (props.error) {\r\n            return <div className={style.setMessageRed}>Incorrect value!</div>\r\n        }\r\n        if (props.setMessage) {\r\n            return <div className={props.counterNumber === props.max ? style.redNumber : style.number}>{props.counterNumber}</div>\r\n        } else {\r\n            return <div className={style.setMessage}>enter values and press 'set'</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {message()}\r\n        </div>\r\n    )\r\n}","import style from './Input.module.css'\r\nimport {ChangeEvent} from 'react';\r\n\r\ntype InputPropsType = {\r\n    name: string\r\n    value: number\r\n    onChangeCallback: (value: number) => void\r\n    inputStyle: string\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeCallback(+e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.fieldSeparate}>\r\n            <span className={style.number}>{props.name}</span>\r\n            <input className={props.inputStyle} type={'number'} value={props.value} onChange={onChangeHandler}/>\r\n        </div>\r\n    )\r\n}","import style from './SetDisplay.module.css'\r\nimport {useEffect, useState} from 'react';\r\nimport {Input} from '../Input/Input';\r\n\r\ntype SetDisplayPropsType = {\r\n    start: number\r\n    max: number\r\n    onChangeMax: (max: number) => void\r\n    onChangeStart: (start: number) => void\r\n}\r\n\r\nexport const SetDisplay = (props: SetDisplayPropsType) => {\r\n    let [inputStyleMax, setInputStyleMax] = useState<string>(style.inputCorrection)\r\n    let [inputStyleStart, setInputStyleStart] = useState<string>(style.inputCorrection)\r\n    useEffect( () => {\r\n        if (props.max < props.start) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n        if (props.max <= 0 && props.start > 0 && props.start !== props.max) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n        if (props.max === props.start) {\r\n            setInputStyleMax(`${style.inputCorrection} ${style.redBackground}`)\r\n            setInputStyleStart(`${style.inputCorrection} ${style.redBackground}`)\r\n            return\r\n        }\r\n        if (props.start < 0 && props.max > 0) {\r\n            setInputStyleMax(style.inputCorrection)\r\n            setInputStyleStart(`${style.inputCorrection} ${style.redBackground}`)\r\n            return\r\n        }\r\n        if (props.start >= 0 && props.max > 0) {\r\n            setInputStyleMax(style.inputCorrection)\r\n            setInputStyleStart(style.inputCorrection)\r\n            return\r\n        }\r\n    }, [props.max, props.start])\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.fieldSeparate}>\r\n                <Input name={\"max value:\"} value={props.max} onChangeCallback={props.onChangeMax} inputStyle={inputStyleMax}/>\r\n            </div>\r\n            <div className={style.fieldSeparate}>\r\n                <Input name={\"start value:\"} value={props.start} onChangeCallback={props.onChangeStart} inputStyle={inputStyleStart}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Button} from '../Button/Button'\r\nimport {CounterDisplay} from '../CounterDisplay/CounterDisplay'\r\nimport style from './Counter.module.css'\r\nimport {SetDisplay} from '../SetDisplay/SetDisplay';\r\n\r\n\r\nexport const Counter = () => {\r\n    // Set initial values\r\n    const incBegin = 0\r\n    const startBegin = 0\r\n    const maxBegin = 5\r\n\r\n    //All useState functions\r\n    let [inc, setInc] = useState<number>(incBegin)\r\n    let [start, setStart] = useState<number>(startBegin)\r\n    let [max, setMax] = useState<number>(maxBegin)\r\n    let [disableInc, setDisableInc] = useState<boolean>(false)\r\n    let [disableReset, setDisableReset] = useState<boolean>(true)\r\n    let [disableSet, setDisableSet] = useState<boolean>(true)\r\n    let [error, setError] = useState<boolean>(false)\r\n\r\n    //Button setting functions. Active or disable\r\n    const setIncOnResetOn = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(false)\r\n    }\r\n    const setIncOnResetOff = () => {\r\n        setDisableInc(false)\r\n        setDisableReset(true)\r\n    }\r\n    const setIncOffResetOn = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(false)\r\n    }\r\n    const setIncOffResetOff = () => {\r\n        setDisableInc(true)\r\n        setDisableReset(true)\r\n    }\r\n    const setSetOn = () => {\r\n        setDisableSet(false)\r\n        setIncOffResetOff()\r\n    }\r\n    const setOffForAll = () => {\r\n        setIncOffResetOff()\r\n        setDisableSet(true)\r\n    }\r\n\r\n    //Checkin and correcting the button status for active or disable them\r\n    const buttonsSettingsForIncReset = () => {\r\n        let incrementTuesday = localStorage.getItem('incrementTuesday')\r\n        let startValue = localStorage.getItem('startValue')\r\n        let maxValue = localStorage.getItem('maxValue')\r\n        if ((incrementTuesday !== maxValue) && (incrementTuesday !== startValue)) setIncOnResetOn()\r\n        if (incrementTuesday === maxValue) setIncOffResetOn()\r\n        if (incrementTuesday === startValue) setIncOnResetOff()\r\n    }\r\n\r\n    //useEffect using after the app is updated\r\n    useEffect(() => {\r\n        let incrementTuesday = localStorage.getItem('incrementTuesday')\r\n        let startValue = localStorage.getItem('startValue')\r\n        let maxValue = localStorage.getItem('maxValue')\r\n\r\n        //Set the initial Local Storage data or set the updated values for useState\r\n        incrementTuesday\r\n            ? setInc(JSON.parse(incrementTuesday))\r\n            : localStorage.setItem('incrementTuesday', JSON.stringify(incBegin))\r\n        startValue\r\n            ? setStart(JSON.parse(startValue))\r\n            : localStorage.setItem('startValue', JSON.stringify(startBegin))\r\n        maxValue\r\n            ? setMax(JSON.parse(maxValue))\r\n            : localStorage.setItem('maxValue', JSON.stringify(maxBegin))\r\n\r\n        buttonsSettingsForIncReset()\r\n    }, [])\r\n\r\n    const incFunction = () => {\r\n        inc++\r\n        if (inc >= start) setDisableReset(false)\r\n        if (inc >= max) {\r\n            setDisableInc(true)\r\n            setInc(inc)\r\n        } else setInc(inc)\r\n        localStorage.setItem('incrementTuesday', JSON.stringify(inc))\r\n    }\r\n    const resetFunction = () => {\r\n        setInc(start)\r\n        setIncOnResetOff()\r\n        localStorage.setItem('incrementTuesday', JSON.stringify(start))\r\n    }\r\n\r\n    const onChangeMax = (max: number) => {\r\n        setMax(max)\r\n        let startValue = localStorage.getItem('startValue')\r\n        let maxValue = localStorage.getItem('maxValue')\r\n        if ((startValue === start.toString()) && (maxValue === max.toString())) {\r\n            buttonsSettingsForIncReset()\r\n            setDisableSet(true)\r\n            setError(false)\r\n            return\r\n        }\r\n        if (max <= 0 || max <= start || start < 0 || max === start) {\r\n            setError(true)\r\n            setOffForAll()\r\n            return\r\n        } else {\r\n            setDisableSet(false)\r\n            setIncOffResetOff()\r\n            setError(false)\r\n        }\r\n    }\r\n    const onChangeStart = (start: number) => {\r\n        setStart(start)\r\n        let startValue = localStorage.getItem('startValue')\r\n        let maxValue = localStorage.getItem('maxValue')\r\n        if ((startValue === start.toString()) && (maxValue === max.toString())) {\r\n            buttonsSettingsForIncReset()\r\n            setDisableSet(true)\r\n            setError(false)\r\n            return\r\n        }\r\n        if (max <= 0 || max <= start || start < 0 || max === start) {\r\n            setError(true)\r\n            setOffForAll()\r\n            return\r\n        } else {\r\n            setDisableSet(false)\r\n            setIncOffResetOff()\r\n            setError(false)\r\n        }\r\n    }\r\n    const setFunction = () => {\r\n        localStorage.setItem('maxValue', JSON.stringify(max))\r\n        localStorage.setItem('startValue', JSON.stringify(start))\r\n        localStorage.setItem('incrementTuesday', JSON.stringify(start))\r\n        setInc(start)\r\n        setDisableSet(true)\r\n        setIncOnResetOff()\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={style.twoCounters}>\r\n            <div className={style.back}>\r\n                <div className={style.middle}>\r\n                    <div className={style.counterField}>\r\n                        <SetDisplay start={start} max={max} onChangeMax={onChangeMax} onChangeStart={onChangeStart}/>\r\n                    </div>\r\n                    <div className={style.buttonsField}>\r\n                        <Button disable={disableSet} title=\"set\" callback={setFunction}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.back}>\r\n                <div className={style.middle}>\r\n                    <div className={style.counterField}>\r\n                        <CounterDisplay counterNumber={inc} max={max} setMessage={disableSet} error={error}/>\r\n                    </div>\r\n                    <div className={style.buttonsField}>\r\n                        <Button disable={disableInc} title=\"inc\" callback={incFunction}/>\r\n                        <Button disable={disableReset} title=\"reset\" callback={resetFunction}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import style from './Tuesday.module.css'\r\nimport React from 'react';\r\nimport { Counter } from './Components/Counter/Counter';\r\n\r\nexport const Tuesday = () => {\r\n    return(\r\n        <div className={style.appComponent}>\r\n            <h3 className={style.textDecoration}>Tuesday Exam (first version)</h3>\r\n            <Counter/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {Monday} from './MonthlyExams/Monday/Monday';\nimport {Tuesday} from './MonthlyExams/TuesdayFirstVersion/Tuesday';\n\nfunction App() {\n    return (\n        <div>\n            <Monday/>\n            <Tuesday/>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}